hab pkg install chef/ci-studio-common >/dev/null
source "$(hab pkg path chef/ci-studio-common)/bin/studio-common"

# This removes the visual mode when select text with the mouse in vim. 
echo "set mouse-=a" >> ~/.vimrc

export MYSQL_PORT=3306
export LEMP_WEBSERVER_PORT=8080

function htop() {
  install_if_missing core/which which;
  install_if_missing core/htop htop
  TOOL_BIN=$(which htop 2>/dev/null);
  eval $TOOL_BIN $@
}

function load_dev_config() {
  export HAB_MYSQL="
app_username='lancewf'
app_password='lancewf'
bind='0.0.0.0'

"
  export HAB_LEMP_WEBSERVER="
[http.listen]
port = $LEMP_WEBSERVER_PORT

"
}

function start_webserver() {
 install_if_missing core/busybox-static netstat;
 netstat -an | grep $LEMP_WEBSERVER_PORT | grep LISTEN >/dev/null 2>/dev/null
 if [ $? == 0 ]; then
   echo "webserver is already running";
   return;
 fi

 build webserver

 start_sup

 hab start $HAB_ORIGIN/lemp-webserver --bind site:lemp-site.default
}

function start_site() {
 start_mysql
 start_webserver

 build site

 hab start $HAB_ORIGIN/lemp-site --bind database:mysql.default --bind webserver:lemp-webserver.default
}

function mysql_shell() {
  install_if_missing core/mysql mysql;
  $(hab pkg path $HAB_ORIGIN/lemp-site)/bin/mysql.sh
}

function start_mysql() {
  install_if_missing core/busybox-static netstat;
  netstat -an | grep $MYSQL_PORT | grep LISTEN >/dev/null 2>/dev/null
  if [ $? == 0 ]; then
    echo "mysql is already running";
    return;
  fi

  start_sup

  hab start core/mysql

  wait_or_fail_for_port_to_listen $MYSQL_PORT
}

function start_sup() {
  load_dev_config
  hab sup status 2>/dev/null 1>&2
  [[ $? == 0 ]] && return
  mkdir -p /hab/sup/default
  echo "=> Launching the Habitat Supervisor in the background..."
  hab sup run $* > /hab/sup/default/sup.log &
  while : ; do
    hab sup status >/dev/null
    [[ $? -eq 0 ]] && break || sleep 1
  done
}

function status() {
 hab sup status;
}

# Saves the in memory bash history to a file
function save_history() {
  history -a /src/.bash_history
}

# if .studiorc is being sourced from an already running studio, don't reset bash
# history -- this is achieved by saving the current history before it is re-read
save_history

# Load the bash history from a file
history -r /src/.bash_history

function cleanup() {
    save_history
}


# When exiting the studio save the bash history to a file
trap cleanup EXIT